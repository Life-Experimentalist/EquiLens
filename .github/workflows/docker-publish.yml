name: Docker Build and Publish

on:
    push:
        branches:
            - main
        tags:
            - "v*.*.*"
    pull_request:
        branches:
            - main
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{github.repository}}

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Extract version from pyproject.toml
              id: get_version
              run: |
                  python -m pip install tomli
                  VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
                  echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
                  echo "Extracted version: $VERSION"

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                  registry: ${{env.REGISTRY}}
                  username: ${{github.actor}}
                  password: ${{secrets.GITHUB_TOKEN}}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}},value=v${{steps.get_version.outputs.VERSION}}
                      type=semver,pattern={{major}}.{{minor}},value=v${{steps.get_version.outputs.VERSION}}
                      type=semver,pattern={{major}},value=v${{steps.get_version.outputs.VERSION}}
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              id: build
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: ${{github.event_name != 'pull_request'}}
                  tags: ${{steps.meta.outputs.tags}}
                  labels: ${{steps.meta.outputs.labels}}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  platforms: linux/amd64,linux/arm64
                  build-args: |
                      VERSION=${{steps.get_version.outputs.VERSION}}

            - name: Generate artifact attestation
              if: github.event_name != 'pull_request'
              uses: actions/attest-build-provenance@v1
              with:
                  subject-name: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
                  subject-digest: ${{steps.build.outputs.digest}}
                  push-to-registry: true
